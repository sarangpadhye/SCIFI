#include <unistd.h>
#include <stdio.h>
#include "elapsedtime.h"
#include "flopop.h"
int overhead(int vectorlength, int nreps, double *time, double *nflops)
{
    //---------------------------------------------------------------------------
    // Get nsamples timings from calling a daxpy in the function flopop(), and 
    // return the estimated clock overhead and equivalent number of flops in the
    // variables time and nflops. Use nreps repetitions in the timing blocks
    // to get timings that are not subject to clock resolution problems. Return
    // error codes:
    //      -1: vector length is not positive
    //      -2: nreps is not positive
    //       0: everything is alright. 
    //       1: could not allocate vectors x and y
    //       2: estimated time for overhead was not a positive number
    //---------------------------------------------------------------------------
    
    // check inputs
    // allocate x and y of length vectorlength
    // initialize x, y, and alpha to nonzero values that won't cause underflow 
    //      or overflow
    // time nreps calls to flopop()
    // compute computational rate corresponding to that timing, using count of
    //      2*vectorlength flops per call to flopop()
    // time nreps calls to both flopop() and elapsedtime() with timer in same loop
    //      as flopop()
    // compute average time for call to elapsedtime(), return in variable time
    // compute average number of flops computable in that amount of time, 
    //      return in variable nflops
    // deallocate vectors
    // return
    return(0);
}
